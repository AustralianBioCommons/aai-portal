name: Upload Portal Builds

on:
  push:
    branches:
      - main

jobs:
  upload-builds:
    name: Build and Upload Portal Artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Validate required secrets
        env:
          AWS_PORTAL_BUILD_BUCKET: ${{ secrets.AWS_PORTAL_BUILD_BUCKET }}
          AWS_ROLE_FRONTEND: ${{ secrets.AWS_ROLE_FRONTEND }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          set -euo pipefail
          if [ -z "${AWS_PORTAL_BUILD_BUCKET}" ]; then
            echo "Missing required secret AWS_PORTAL_BUILD_BUCKET" >&2
            exit 1
          fi
          if [ -z "${AWS_ROLE_FRONTEND}" ]; then
            echo "Missing required secret AWS_ROLE_FRONTEND" >&2
            exit 1
          fi
          if [ -z "${AWS_REGION}" ]; then
            echo "Missing required secret AWS_REGION" >&2
            exit 1
          fi

      - name: Build production bundle
        run: npx ng build --configuration production --output-path dist/aai-portal-prod

      - name: Build debug bundle
        run: npx ng build --configuration debug --output-path dist/aai-portal-debug

      - name: Determine release version
        id: version
        run: |
          set -euo pipefail
          VERSION=$(node -p "require('./package.json').version")
          if [ -z "${VERSION}" ]; then
            echo "Unable to read version from package.json" >&2
            exit 1
          fi
          echo "Using release version ${VERSION}"
          echo "build_version=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_FRONTEND }}
          role-session-name: portal-build-upload
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload production versioned build
        env:
          VERSION: ${{ steps.version.outputs.build_version }}
          AWS_PORTAL_BUILD_BUCKET: ${{ secrets.AWS_PORTAL_BUILD_BUCKET }}
        run: |
          set -euo pipefail
          aws s3 sync dist/aai-portal-prod/browser/ "s3://${AWS_PORTAL_BUILD_BUCKET}/build/prod/version/${VERSION}/" --delete

      - name: Update production dev build
        env:
          AWS_PORTAL_BUILD_BUCKET: ${{ secrets.AWS_PORTAL_BUILD_BUCKET }}
        run: |
          set -euo pipefail
          aws s3 sync dist/aai-portal-prod/browser/ "s3://${AWS_PORTAL_BUILD_BUCKET}/build/prod/dev/" --delete

      - name: Upload debug versioned build
        env:
          VERSION: ${{ steps.version.outputs.build_version }}
          AWS_PORTAL_BUILD_BUCKET: ${{ secrets.AWS_PORTAL_BUILD_BUCKET }}
        run: |
          set -euo pipefail
          aws s3 sync dist/aai-portal-debug/browser/ "s3://${AWS_PORTAL_BUILD_BUCKET}/build/debug/version/${VERSION}/" --delete

      - name: Update debug dev build
        env:
          AWS_PORTAL_BUILD_BUCKET: ${{ secrets.AWS_PORTAL_BUILD_BUCKET }}
        run: |
          set -euo pipefail
          aws s3 sync dist/aai-portal-debug/browser/ "s3://${AWS_PORTAL_BUILD_BUCKET}/build/debug/dev/" --delete
